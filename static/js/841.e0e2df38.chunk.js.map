{"version":3,"file":"static/js/841.e0e2df38.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactFrom.jsx","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.jsx","redux/cotactForm/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\n\nexport const FormInput = styled.input`\n  font-size: 18px;\n  padding: 4px 2px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid grey;\n  border-radius: 0px;\n  outline: none;\n  color: black;\n  transition: 250ms box-shadow ease-in-out;\n  &:focus,\n  &:active {\n    border-bottom: 2px solid green;\n    box-shadow: rgb(0 0 0 / 15%) 0px 4px 4px -2px;\n  }\n`;\n\n\nexport const FormButton = styled.button`\npadding: 13px 70px;\nmin-width: 300px;\nfont-weight: 600;\nfont-size: 14px;\nborder-radius: 5px;\nborder-style: hidden;\nbackground-color: green;\ncolor: #ffffff;\ncursor: pointer;\n  \n:hover,\n:focus {\n    background-color: white;\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-shadow: rgb(0 0 0 / 20%) 0px 10px 10px -5px;\n}\n:active {\n    box-shadow: rgb(0 0 0 / 30%) 0px 10px 10px -2px;\n}\n`;","import { useState } from 'react';\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/cotactForm/operation';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      id: nanoid(6),\n      name,\n      phone,\n    };\n    dispatch(addContact(contact));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <FormInput\n          type=\"tel\"\n          name=\"phone\"\n          onChange={handleChange}\n          value={phone}\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contacts</FormButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItemButton = styled.button`\npadding: 10px 70px;\nmax-width: 300px;\nfont-weight: 600;\nfont-size: 14px;\nborder-radius: 5px;\nborder-style: hidden;\nbackground-color: red;\ncolor: #ffffff;\ncursor: pointer;\n  \n:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-shadow: rgb(0 0 0 / 20%) 0px 10px 10px -5px;\n}\n:active {\n    box-shadow: rgb(0 0 0 / 30%) 0px 10px 10px -2px;\n}\n`;\n\n\nexport const UserContactItem = styled.li`\n  width: 500px;\n  border-radius: 10px;\n  font-size: 20px;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: rgb(0 0 0 / 10%) 0px 4px 4px -2px;\n  \n  :hover,\n  :focus {\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgb(0 0 0 / 10%) 0px 10px 10px -2px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const UserContactList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 20px;\n`;\n","import { ContactItemButton } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ contact: { id, name, phone }, onDelete }) => {\n  return (\n    <>\n      <p>\n        {name} : {phone}\n      </p>\n      <ContactItemButton type=\"button\" onClick={() => onDelete(id)}>\n        Delete\n      </ContactItemButton>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilterValue = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase().trim());\n    });\n  }\n);\n","import { ContactItem } from './ContactItem';\nimport { UserContactItem, UserContactList } from './ContactItem.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/cotactForm/selectors';\nimport { deleteContact } from '../../redux/cotactForm/operation';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n  return (\n    <UserContactList>\n      {contacts.map(item => (\n        <UserContactItem key={item.id}>\n          <ContactItem\n            contact={item}\n            onDelete={() => dispatch(deleteContact(item.id))}\n          />\n        </UserContactItem>\n      ))}\n    </UserContactList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n    font-size: 18px;\n    padding: 8px 16px;\n    background-color: transparent;\n    border: none;\n    border: 1px solid grey;\n    border-radius: 8px;\n    outline: none;\n    color: black;\n    transition: 250ms box-shadow ease-in-out;\n\n  &:focus,\n  &:active {\n    border: 2px solid green;\n    box-shadow: rgb(0 0 0 / 15%) 0px 4px 4px -2px;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from '../../redux/cotactForm/filterSlice';\nimport { getFilterValue } from '../../redux/cotactForm/selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  return (\n    <FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name={filterValue}\n        onChange={e => dispatch(setFilterValue(e.target.value))}\n        placeholder=\"Find contacts by name\"\n      />\n    </FilterLabel>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <h1>{title}</h1>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { ContactForm } from '../components/ContactForm/ContactFrom';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Title } from '../components/Title/Title';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/cotactForm/operation';\nimport { getIsLoading, getError } from '../redux/cotactForm/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","handleChange","evt","target","value","onSubmit","preventDefault","contact","id","nanoid","addContact","type","onChange","placeholder","pattern","title","required","ContactItemButton","UserContactItem","UserContactList","ContactItem","onDelete","onClick","getFilterValue","state","filter","getIsLoading","contacts","isLoading","getError","error","getFilteredContacts","createSelector","items","toLowerCase","includes","trim","ContactList","useSelector","console","log","map","item","deleteContact","FilterLabel","FilterInput","Filter","filterValue","e","setFilterValue","Title","useEffect","fetchContacts"],"sourceRoot":""}