{"version":3,"file":"static/js/770.20ccfaa0.chunk.js","mappings":"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","sources":["components/FormStyle/ContactForm.styled.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactFrom.jsx","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/cotactForm/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Title/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const FormInput = styled.input`\n  font-size: 18px;\n  padding: 4px 2px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid grey;\n  border-radius: 0px;\n  outline: none;\n  color: black;\n  transition: 250ms box-shadow ease-in-out;\n  &:focus,\n  &:active {\n    border-bottom: 2px solid green;\n    box-shadow: rgb(0 0 0 / 15%) 0px 4px 4px -2px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  padding: 13px 70px;\n  min-width: 300px;\n  font-weight: 600;\n  font-size: 14px;\n  border-radius: 5px;\n  border-style: hidden;\n  background-color: green;\n  color: #ffffff;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: white;\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-shadow: rgb(0 0 0 / 20%) 0px 10px 10px -5px;\n  }\n  :active {\n    box-shadow: rgb(0 0 0 / 30%) 0px 10px 10px -2px;\n  }\n`;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState } from 'react';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from '../FormStyle/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/cotactForm/operation';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      id: nanoid(6),\n      name,\n      number,\n    };\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contacts</FormButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItemButton = styled.button`\n  padding: 5px 10px;\n  max-width: 300px;\n  font-weight: 600;\n  font-size: 14px;\n  border-radius: 5px;\n  border-style: hidden;\n  background-color: black;\n  color: #ffffff;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-shadow: rgb(0 0 0 / 20%) 0px 10px 10px -5px;\n  }\n  :active {\n    box-shadow: rgb(0 0 0 / 30%) 0px 10px 10px -2px;\n  }\n`;\n\nexport const UserContactItem = styled.li`\n  min-width: 500px;\n  border-radius: 10px;\n  font-size: 20px;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: rgb(0 0 0 / 10%) 0px 4px 4px -2px;\n\n  :hover,\n  :focus {\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgb(0 0 0 / 10%) 0px 10px 10px -2px;\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const UserContactList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 20px;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 20px;\n`;\n","import { ContactItemButton } from './ContactItem.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { editContact } from 'redux/cotactForm/operation';\nimport { FormInput } from '../FormStyle/ContactForm.styled';\n\nexport const ContactItem = ({\n  contact: { id, name: nameValue, number: numberValue },\n  onDelete,\n}) => {\n  const [isEdid, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameValue);\n  const [number, setNumber] = useState(numberValue);\n\n  const dispatch = useDispatch();\n\n  const handleChangeMode = () => {\n    if (isEdid) {\n      setIsEdit(prev => !prev);\n      dispatch(editContact({ id, name, number }));\n      return;\n    }\n    setIsEdit(prev => !prev);\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        return;\n      case 'number':\n        setNumber(e.target.value);\n        return;\n      default:\n        return;\n    }\n  };\n  return (\n    <>\n      {isEdid ? (\n        <FormInput\n          style={{ marginRight: 10 }}\n          name=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          value={name}\n        />\n      ) : (\n        <p>{name}: </p>\n      )}\n      {isEdid ? (\n        <FormInput\n          style={{ marginRight: 20 }}\n          name=\"number\"\n          onChange={handleChange}\n          type=\"tel\"\n          value={number}\n        />\n      ) : (\n        <p>{number}</p>\n      )}\n      <div\n        style={{\n          display: 'flex',\n          gap: 10,\n        }}\n      >\n        <ContactItemButton type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </ContactItemButton>\n        <ContactItemButton type=\"button\" onClick={handleChangeMode}>\n          {isEdid ? 'Save' : 'Edid'}\n        </ContactItemButton>\n      </div>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilterValue = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase().trim());\n    });\n  }\n);\n","import { ContactItem } from './ContactItem';\nimport { UserContactItem, UserContactList } from './ContactItem.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/cotactForm/selectors';\nimport { deleteContact } from '../../redux/cotactForm/operation';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  return (\n    <UserContactList>\n      {contacts.map(item => (\n        <UserContactItem key={item.id}>\n          <ContactItem\n            contact={item}\n            onDelete={() => dispatch(deleteContact(item.id))}\n          />\n        </UserContactItem>\n      ))}\n    </UserContactList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n    font-size: 18px;\n    padding: 8px 16px;\n    background-color: transparent;\n    border: none;\n    border: 1px solid grey;\n    border-radius: 8px;\n    outline: none;\n    color: black;\n    transition: 250ms box-shadow ease-in-out;\n\n  &:focus,\n  &:active {\n    border: 2px solid green;\n    box-shadow: rgb(0 0 0 / 15%) 0px 4px 4px -2px;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from '../../redux/cotactForm/filterSlice';\nimport { getFilterValue } from '../../redux/cotactForm/selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  return (\n    <FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name={filterValue}\n        onChange={e => dispatch(setFilterValue(e.target.value))}\n        placeholder=\"Find contacts by name\"\n      />\n    </FilterLabel>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <h1>{title}</h1>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { ContactForm } from '../components/ContactForm/ContactFrom';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Title } from '../components/Title/Title';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/cotactForm/operation';\nimport { getIsLoading, getError } from '../redux/cotactForm/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","evt","target","value","onSubmit","preventDefault","contact","addContact","type","onChange","placeholder","pattern","title","required","ContactItemButton","UserContactItem","UserContactList","ContactItem","nameValue","numberValue","onDelete","isEdid","setIsEdit","e","style","marginRight","display","gap","onClick","prev","editContact","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilterValue","state","filter","getIsLoading","contacts","isLoading","getError","error","getFilteredContacts","items","toLowerCase","includes","trim","ContactList","useSelector","item","deleteContact","FilterLabel","FilterInput","Filter","filterValue","setFilterValue","Title","useEffect","fetchContacts"],"sourceRoot":""}