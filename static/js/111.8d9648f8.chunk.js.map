{"version":3,"file":"static/js/111.8d9648f8.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,GAAAA,KAAH,4HAQJC,EAAYD,EAAAA,GAAAA,MAAH,yGAQTE,EAAYF,EAAAA,GAAAA,MAAH,qXAkBTG,EAAaH,EAAAA,GAAAA,OAAH,6b,6IC1BvB,SAASI,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,OACH,OAAO,kBACFF,GADL,IAEEG,MAAOF,EAAOG,UAElB,IAAK,WACH,OAAO,kBACFJ,GADL,IAEEK,SAAUJ,EAAOG,UAErB,QACE,OAAOJ,EAEZ,CAEM,IAAMM,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,YAAWR,EAAS,CAC5CI,MAAO,GACPE,SAAU,KAFZ,eAAOL,EAAP,KAAcQ,EAAd,KAKMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxBJ,EAAS,CAAEN,KAAMU,EAAEC,OAAOC,KAAMV,QAASQ,EAAEC,OAAOE,OACnD,EAOD,OACE,UAAC,KAAD,CAAMd,OAAO,GAAGe,SANG,SAAAJ,GACnBA,EAAEK,iBACFR,GAASS,EAAAA,EAAAA,IAAMlB,GAChB,EAGC,WACE,UAAC,KAAD,CAAWmB,QAAQ,QAAnB,mBAEE,SAAC,KAAD,CAAWC,SAAUT,EAAmBG,KAAK,OAAOZ,KAAK,cAE3D,UAAC,KAAD,CAAWiB,QAAQ,WAAnB,sBAEE,SAAC,KAAD,CACEC,SAAUT,EACVG,KAAK,WACLZ,KAAK,iBAGT,SAAC,KAAD,CAAYA,KAAK,SAAjB,sBAGL,EClDD,EATkB,WAChB,OACE,4BACE,wCACA,SAACI,EAAD,MAGL,C","sources":["components/FormStyle/ContactForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\n\nexport const FormInput = styled.input`\n  font-size: 18px;\n  padding: 4px 2px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid grey;\n  border-radius: 0px;\n  outline: none;\n  color: black;\n  transition: 250ms box-shadow ease-in-out;\n  &:focus,\n  &:active {\n    border-bottom: 2px solid green;\n    box-shadow: rgb(0 0 0 / 15%) 0px 4px 4px -2px;\n  }\n`;\n\n\nexport const FormButton = styled.button`\npadding: 13px 70px;\nmin-width: 300px;\nfont-weight: 600;\nfont-size: 14px;\nborder-radius: 5px;\nborder-style: hidden;\nbackground-color: green;\ncolor: #ffffff;\ncursor: pointer;\n  \n:hover,\n:focus {\n    background-color: white;\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    box-shadow: rgb(0 0 0 / 20%) 0px 10px 10px -5px;\n}\n:active {\n    box-shadow: rgb(0 0 0 / 30%) 0px 10px 10px -2px;\n}\n`;","import { useReducer } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from '../FormStyle/ContactForm.styled';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      return {\n        ...state,\n        email: action.payload,\n      };\n    case 'password':\n      return {\n        ...state,\n        password: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const LoginForm = () => {\n  const [state, setState] = useReducer(reducer, {\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    setState({ type: e.target.name, payload: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn(state));\n  };\n\n  return (\n    <Form action=\"\" onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"email\">\n        email\n        <FormInput onChange={handleChangeInput} name=\"name\" type=\"email\" />\n      </FormLabel>\n      <FormLabel htmlFor=\"password\">\n        password\n        <FormInput\n          onChange={handleChangeInput}\n          name=\"password\"\n          type=\"password\"\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Log In</FormButton>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <h1>PAGE LOGIN</h1>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","reducer","state","action","type","email","payload","password","LoginForm","useReducer","setState","dispatch","useDispatch","handleChangeInput","e","target","name","value","onSubmit","preventDefault","logIn","htmlFor","onChange"],"sourceRoot":""}